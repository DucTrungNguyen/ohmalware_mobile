/// Author: Duc Trung Nguyen
/// Created: 03/04/2021
/// Project: ohmalware

import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:grouped_list/grouped_list.dart';
import 'package:ohmalware/commons/enum.dart';
import 'package:ohmalware/models/models.dart';
import 'package:ohmalware/modules/details/controllers/detail_controller.dart';
import 'package:ohmalware/modules/details/details_screens/screens.dart';
import 'package:ohmalware/modules/home/controllers/home_controller.dart';
import 'package:device_apps/device_apps.dart';
import 'package:fl_chart/fl_chart.dart';
import 'package:flutter/material.dart';
import 'package:flutter/gestures.dart';
import 'package:ohmalware/modules/home/home_screens/screens.dart';
import 'indicator.dart';

class ScanResultChartHomeWidget extends StatefulWidget {
  final List<ResultAppScanModel> list;

  const ScanResultChartHomeWidget({this.list, Key key}) : super(key: key);

  @override
  _ScanResultChartHomeWidgetState createState() =>
      _ScanResultChartHomeWidgetState();
}

class _ScanResultChartHomeWidgetState extends State<ScanResultChartHomeWidget> {
  final HomeController _homeController = Get.find();
  int touchedIndex = -1;

  @override
  void initState() {
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return AspectRatio(
      aspectRatio: 1.3,
      child: Card(
        color: Colors.white,
        child: Row(
          children: <Widget>[
            const SizedBox(
              height: 18,
            ),
            Expanded(
              child: AspectRatio(
                aspectRatio: 1,
                child: PieChart(
                  PieChartData(
                      pieTouchData:
                          PieTouchData(touchCallback: (pieTouchResponse) {
                        setState(() {
                          // touchedIndex = pieTouchResponse
                          //     .touchedSection.touchedSectionIndex;

                          final desiredTouch = pieTouchResponse.touchInput
                                  is! PointerExitEvent &&
                              pieTouchResponse.touchInput is! PointerUpEvent;
                          if (desiredTouch &&
                              pieTouchResponse.touchedSection != null) {
                            touchedIndex = pieTouchResponse
                                .touchedSection.touchedSectionIndex;
                            if (touchedIndex == 0) {
                              Get.to(ListAppScreen(
                                typeApp: TYPE_APP.normal,
                                title: 'Normal app',
                              ));
                            } else if( touchedIndex == 1 ) {
                              Get.to(ListAppScreen(
                                typeApp: TYPE_APP.malware,
                                title: 'Malware app',
                              ));
                            }
                          } else {
                            touchedIndex = -1;
                          }
                        });
                      }),
                      borderData: FlBorderData(
                        show: false,
                      ),
                      sectionsSpace: 0,
                      centerSpaceRadius: 40,
                      sections: showingSections()),
                ),
              ),
            ),
            Column(
              mainAxisSize: MainAxisSize.max,
              mainAxisAlignment: MainAxisAlignment.end,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: const <Widget>[
                Indicator(
                  color: Color(0xff0293ee),
                  text: 'Normal app',
                  isSquare: true,
                ),
                SizedBox(
                  height: 4,
                ),
                Indicator(
                  color: Color(0xffff0000),
                  text: 'Malware',
                  isSquare: true,
                ),
                SizedBox(
                  height: 18,
                ),
              ],
            ),
            const SizedBox(
              width: 28,
            ),
          ],
        ),
      ),
    );
  }

  List<PieChartSectionData> showingSections() {
    // final isTouched = i == touchedIndex;
    final fontSize = 13.0;
    final radius = 50.0;

    List<PieChartSectionData> listPieChartSectionData = [];

    return listPieChartSectionData
      ..add(PieChartSectionData(
        color: const Color(0xff0293ee),
        value: _homeController.numberNormal.value /
            _homeController.totalNumberApp.value,
        title:
            '${((_homeController.numberNormal.value / _homeController.totalNumberApp.value) * 100).toStringAsFixed(2)}%',
        radius: touchedIndex == 0 ? 60 : radius,
        titleStyle: TextStyle(
            fontSize: touchedIndex == 0 ? 15 : fontSize,
            fontWeight: FontWeight.bold,
            color: const Color(0xffffffff)),
      ))
      ..add(PieChartSectionData(
        color: const Color(0xffff0000),
        value: _homeController.numberMalware.value /
            _homeController.totalNumberApp.value,
        title:
            '${((_homeController.numberMalware.value / _homeController.totalNumberApp.value) * 100).toStringAsFixed(2)}%',
        radius: radius,
        titleStyle: TextStyle(
            fontSize: fontSize,
            fontWeight: FontWeight.bold,
            color: const Color(0xffffffff)),
      ));

    //
    // return List.generate(4, (i) {
    //   final isTouched = i == touchedIndex;
    //   final fontSize = isTouched ? 25.0 : 16.0;
    //   final radius = isTouched ? 60.0 : 50.0;
    //   switch (i) {
    //     case 0:
    //       return PieChartSectionData(
    //         color: const Color(0xff0293ee),
    //         value: 40,
    //         title: '40%',
    //         radius: radius,
    //         titleStyle: TextStyle(
    //             fontSize: fontSize,
    //             fontWeight: FontWeight.bold,
    //             color: const Color(0xffffffff)),
    //       );
    //     case 1:
    //       return PieChartSectionData(
    //         color: const Color(0xfff8b250),
    //         value: 30,
    //         title: '30%',
    //         radius: radius,
    //         titleStyle: TextStyle(
    //             fontSize: fontSize,
    //             fontWeight: FontWeight.bold,
    //             color: const Color(0xffffffff)),
    //       );
    //     case 2:
    //       return PieChartSectionData(
    //         color: const Color(0xff845bef),
    //         value: 15,
    //         title: '15%',
    //         radius: radius,
    //         titleStyle: TextStyle(
    //             fontSize: fontSize,
    //             fontWeight: FontWeight.bold,
    //             color: const Color(0xffffffff)),
    //       );
    //     case 3:
    //       return PieChartSectionData(
    //         color: const Color(0xff13d38e),
    //         value: 15,
    //         title: '15%',
    //         radius: radius,
    //         titleStyle: TextStyle(
    //             fontSize: fontSize,
    //             fontWeight: FontWeight.bold,
    //             color: const Color(0xffffffff)),
    //       );
    //     default:
    //       throw Error();
    //   }
    // });
  }
}
