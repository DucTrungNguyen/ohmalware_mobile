package vn.ttrustsoft.ohmalware.ohmalware

import android.content.pm.PackageManager
import android.util.Log
import androidx.annotation.NonNull
import io.flutter.embedding.android.FlutterActivity
import io.flutter.embedding.engine.FlutterEngine
import io.flutter.plugin.common.MethodCall
import io.flutter.plugin.common.MethodChannel
import io.flutter.plugins.GeneratedPluginRegistrant
import java.io.File


class MainActivity : FlutterActivity() {

    private val CHANNEL = "vn.ttrustsoft.malware/scan"
    private lateinit var _result: MethodChannel.Result

    override fun configureFlutterEngine(@NonNull flutterEngine: FlutterEngine) {
        GeneratedPluginRegistrant.registerWith(flutterEngine);

        MethodChannel(flutterEngine.dartExecutor.binaryMessenger, CHANNEL).setMethodCallHandler { call, result ->
            run {
                resultCall(call, result)
            }

        }
    }

    private fun resultCall(@NonNull call: MethodCall, result: MethodChannel.Result) {

        Log.d("ABC", call.method)
        _result = result
        val hashMap: HashMap<String, List<String>> = HashMap<String, List<String>>()

        val listData: MutableList<HashMap<String, Any>> = mutableListOf<HashMap<String, Any>>()

        if (call.method == "getInformationApp") {

            val pm = packageManager
            val packages = pm.getInstalledApplications(PackageManager.GET_META_DATA)

            for (applicationInfo in packages) {

                val hashMapApp: HashMap<String, Any> = HashMap<String, Any>()
                hashMapApp["package"] = applicationInfo.packageName.toString()
                hashMapApp["name"] = packageManager.getApplicationLabel(applicationInfo).toString()
                hashMapApp["apis"] = listOf<String>().toList()

//                val listPer: MutableList<HashMap<String, Any>> = mutableListOf()

                Log.d("test", "App: " + applicationInfo.name + " Package: " + applicationInfo.packageName)

                try {
                    val packageInfo = pm.getPackageInfo(applicationInfo.packageName, PackageManager.GET_PERMISSIONS)
                    val packageInfo1 = pm.getPackageInfo(applicationInfo.publicSourceDir, PackageManager.GET_SHARED_LIBRARY_FILES)
                    val yourApk = File(applicationInfo.publicSourceDir)

                    //Get Permissions
                    val requestedPermissions = packageInfo.requestedPermissions
                    if (requestedPermissions != null) {
                        hashMapApp["permissions"] = requestedPermissions.toList()
//                        for ( permission in requestedPermissions){
//                            listOfVehicleNames.add(permission)
//                        }
                    }
                } catch (e: PackageManager.NameNotFoundException) {
                    e.printStackTrace()
                }


                listData.add(hashMapApp)
//                hashMap.put(nameApp.toString(), listOfVehicleNames.toList())


            }
            Log.d("vao method", "Vao method getImageFromGallery")

            _result.success(listData)

        }

    }


}
