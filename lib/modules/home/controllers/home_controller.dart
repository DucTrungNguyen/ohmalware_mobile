/// Author: Duc Trung Nguyen
/// Created: 03/04/2021
/// Project: ohmalware
///
import 'package:get/get.dart';
import 'package:ohmalware/commons/enum.dart';
import 'package:ohmalware/method_channels/scan_method_channel.dart';
import 'package:ohmalware/models/models.dart';
import 'package:ohmalware/modules/home/controllers/home_state.dart';
import 'package:ohmalware/repositories/api_client.dart';
import 'package:device_apps/device_apps.dart';

class HomeController extends GetxController {
  var listResultAppScanModel = <ResultAppScanModel>[].obs;
  var listAppScanModel = <Map<String, dynamic>>[];
  var numberApp = 0.obs;
  var homeSate = HomeState().obs;
  var listApp = <Application>[].obs;

  @override
  void onInit() {
    super.onInit();
  }

  Future<void> scanApp() async {
    homeSate.update((val) {
      val.setHomeState = STATE.scanning;
    });

    await Future.delayed(const Duration(seconds: 5));
    // var resultScan = await ScanMethodChannel.getInformationApp();

    // Returns a list of only those apps that have launch intent
    List<Application> apps = await DeviceApps.getInstalledApplications(
        includeAppIcons: true,
        onlyAppsWithLaunchIntent: false,
        includeSystemApps: false);

    if (apps.isNotEmpty) {
      numberApp.value = apps.length;
      listApp.value = apps;

      apps.forEach((element) {
        listAppScanModel.add({
          'name': element.appName,
          'package': element.packageName,
          'services': element.services ?? [],
          'permission': element.permissions ?? []
        });
      });

      var listResultApp =
          await apiClient.uploadScan({'data': listAppScanModel});

      Future.delayed(const Duration(seconds: 5));

      listResultAppScanModel.value = listResultApp;
      homeSate.update((val) {
        val.setHomeState = STATE.scanSuccessfully;
      });
    } else {
      homeSate.update((val) {
        val.setHomeState = STATE.scanError;
      });
    }

    // if (resultScan['status'] == RESPONSE_STATUS_SCAN.success) {
    //   numberApp.value = resultScan['number'];
    //
    //   // listAppScanModel.value.add()
    //
    //   List<Map<dynamic, dynamic>>.from(resultScan['dataApp'])
    //       .forEach((element) {
    //     // var a = 1;
    //     // ignore: invalid_use_of_protected_member
    //     listAppScanModel.value.add({
    //       'name': element['name'],
    //       'package': element['package'],
    //       'services': element['services'] ?? [],
    //       'permission': element['permissions'] ?? []
    //     });
    //   });
    //
    //   // var a = 1;
    //
    //   Map<String, dynamic> data = {'data': listAppScanModel.value};
    //
    //   var listResultApp = await apiClient.uploadScan(data);
    //
    //   Future.delayed(const Duration(seconds: 5));
    //
    //   listResultAppScanModel.value = listResultApp;
    //   homeSate.update((val) {
    //     val.setHomeState = STATE.scanSuccessfully;
    //   });
    //
    // } else if (resultScan['status'] == RESPONSE_STATUS_SCAN.errorScan) {
    //   homeSate.update((val) {
    //     val.setHomeState = STATE.scanError;
    //   });
    // }

    // await Future.delayed(const Duration(milliseconds: 10000));
  }

  Future<void> scanSingleApp(String package) async {
    var resultScan = await ScanMethodChannel.getInformationSingleApp(package);

    if (resultScan['status'] == RESPONSE_STATUS_SCAN.success) {}

    if (resultScan['status'] == RESPONSE_STATUS_SCAN.errorApp) {}
  }

  void resetScan() {
    // listAppScanModel.value = [];
    listApp.value = [];
    listResultAppScanModel.value = [];
    homeSate.update((val) {
      val.setHomeState = STATE.initial;
    });
  }
}
