import 'package:get/get.dart';
import 'package:ohmalware/commons/enum.dart';
import 'package:ohmalware/method_channels/scan_method_channel.dart';
import 'package:ohmalware/models/models.dart';
import 'package:ohmalware/modules/home/controllers/home_state.dart';

/// Author: Duc Trung Nguyen
/// Created: 03/04/2021
/// Project: ohmalware

class HomeController extends GetxController {
  var listResultAppScanModel = <ResultAppScanModel>[].obs;
  var listAppScanModel = <AppScanModel>[].obs;
  var numberApp = 0.obs;
  var homeSate = HomeState().obs;

  @override
  void onInit() {
    super.onInit();
  }

  Future<void> scanApp() async {
    homeSate.update((val) {
      val.setHomeState = STATE.scanning;
    });

    print(' ${homeSate.value.getCurrentHomeState}');

    var resultScan = await ScanMethodChannel.getInformationApp();

    if (resultScan['status'] == RESPONSE_STATUS_SCAN.success) {
      numberApp.value = resultScan['number'];

      // listAppScanModel.value.add()

      List<dynamic>.from(resultScan['dataApp']).forEach((element) {
        // ignore: invalid_use_of_protected_member
        listAppScanModel.value.add(AppScanModel.fromJson(element));
      });

    } else if (resultScan['status'] == RESPONSE_STATUS_SCAN.success) {

      homeSate.update((val) {
        val.setHomeState = STATE.scanError;
      });
    }

    // await Future.delayed(const Duration(milliseconds: 10000));
    homeSate.update((val) {
      val.setHomeState = STATE.scanSuccessfully;
    });

  }
}
