/// Author: Duc Trung Nguyen
/// Created: 03/04/2021
/// Project: ohmalware

import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:grouped_list/grouped_list.dart';
import 'package:ohmalware/models/models.dart';
import 'package:ohmalware/modules/details/controllers/detail_controller.dart';
import 'package:ohmalware/modules/details/details_screens/screens.dart';
import 'package:ohmalware/modules/home/controllers/home_controller.dart';
import 'package:device_apps/device_apps.dart';

class ScanSuccessfullyHomeWidget extends StatelessWidget {
  final List<ResultAppScanModel> list;

  ScanSuccessfullyHomeWidget({this.list});

  final HomeController _homeController = Get.find();

  @override
  Widget build(BuildContext context) {
    return GroupedListView<dynamic, bool>(
      elements: list,
      groupBy: (element) => element.isMalware,
      // groupComparator: (value1, value2) => value2 == value1,
      itemComparator: (item1, item2) => item1.name.compareTo(item2.name),
      order: GroupedListOrder.DESC,
      useStickyGroupSeparators: true,
      groupSeparatorBuilder: (bool value) => Padding(
        padding: const EdgeInsets.all(8.0),
        child: Text(
          value ? 'Malware app' : 'Normal app',
          textAlign: TextAlign.center,
          style: TextStyle(fontSize: 15, fontWeight: FontWeight.bold, color: Colors.black),
        ),
      ),
      itemBuilder: (c, element) {
        final detailsApp = _homeController.listApp.firstWhere(
            (elementApplicationWithIcon) =>
                elementApplicationWithIcon.packageName ==
                (element as ResultAppScanModel).package);
        return Card(
          elevation: 8.0,
          margin: EdgeInsets.symmetric(horizontal: 5, vertical: 3),
          child: Container(
            child: GestureDetector(
              onTap: () async {
                // print("vao day");

                // TODO get information single app
                // await _detailController.scanSingleApp(list[index].package);

                Get.to(DetailsScreen(
                  app: detailsApp,
                ));
              },
              child: ListTile(
                leading: detailsApp is ApplicationWithIcon
                    ? CircleAvatar(
                        backgroundImage: MemoryImage(
                            (detailsApp as ApplicationWithIcon).icon),
                        backgroundColor: Colors.white,
                      )
                    : null,
                title: Text(
                  (element as ResultAppScanModel).name,
                  style: TextStyle(fontWeight: FontWeight.w800),
                ),
                subtitle: Text(!(element as ResultAppScanModel).isMalware
                    ? 'Not malware'
                    : 'Is malware ${(element as ResultAppScanModel).type}'),
              ),
            ),
          ),
        );
      },
    );
    // final HomeController _homeController = Get.put(HomeController());
    return ListView.builder(
        itemCount: list.length,
        itemBuilder: (context, index) {
          final detailsApp = _homeController.listApp.firstWhere(
              (element) => element.packageName == list[index].package);
          return GestureDetector(
            onTap: () async {
              // print("vao day");

              // TODO get information single app
              // await _detailController.scanSingleApp(list[index].package);

              Get.to(DetailsScreen(
                app: detailsApp,
              ));
            },
            child: ListTile(
              leading: detailsApp is ApplicationWithIcon
                  ? CircleAvatar(
                      backgroundImage:
                          MemoryImage((detailsApp as ApplicationWithIcon).icon),
                      backgroundColor: Colors.white,
                    )
                  : null,
              title: Text(
                list[index].name,
                style: TextStyle(fontWeight: FontWeight.w800),
              ),
              subtitle: Text(!list[index].isMalware
                  ? 'Not malware'
                  : 'Is malware ${list[index].type}'),
            ),
          );
        });
  }
}
